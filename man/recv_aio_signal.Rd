% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aio.R
\name{recv_aio_signal}
\alias{recv_aio_signal}
\title{Receive Async and Signal a Condition}
\usage{
recv_aio_signal(
  con,
  cv,
  mode = c("serial", "character", "complex", "double", "integer", "logical", "numeric",
    "raw", "string"),
  timeout = NULL,
  n = 65536L
)
}
\arguments{
\item{con}{a Socket, Context or Stream.}

\item{cv}{(optional) a \sQuote{conditionVariable} to signal when the async
receive is complete.}

\item{mode}{[default 'serial'] character value or integer equivalent - one of
\sQuote{serial} (1L), \sQuote{character} (2L), \sQuote{complex} (3L),
\sQuote{double} (4L), \sQuote{integer} (5L), \sQuote{logical} (6L),
\sQuote{numeric} (7L), \sQuote{raw} (8L), or \sQuote{string} (9L). The
default \sQuote{serial} means a serialised R object; for the other modes,
received bytes are converted into the respective mode. \sQuote{string} is
a faster option for length one character vectors. For Streams,
\sQuote{serial} is not an option and the default is \sQuote{character}.}

\item{timeout}{[default NULL] integer value in milliseconds or NULL, which
applies a socket-specific default, usually the same as no timeout.}

\item{n}{[default 65536L] applicable to Streams only, the maximum number of
bytes to receive. Can be an over-estimate, but note that a buffer of this
size is reserved.}
}
\description{
Deprecated function - use \code{recv_aio} instead.
}
\keyword{internal}
